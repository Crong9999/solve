{
	// Place your solve workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"create-solve": {
		"prefix": "create-solve",
		"body": [
			"// problem link",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define fast ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);",
			"typedef long long ll;typedef long double ld;typedef pair<int,int> pii;",
			"#define F first",
			"#define S second",
			"#define PB push_back",
			"#define MP make_pair",
			"const ll mod = 1e9+7, N = 2e6+7, M = 2e6+7, INF = INT_MAX/10;",
			"ll powe(ll x, ll y){ x = x%mod, y=y%(mod-1);ll ans = 1;while(y>0){if (y&1){ans = (1ll * x * ans)%mod;}y>>=1;x = (1ll * x * x)%mod;}return ans;}",
			"",
			"void solve()",
			"{",
				"\t$1",
			"}",
			"",
			"signed main()",
			"{",
				"\tfast;",
				"\tsolve();",
				"\treturn 0;",
			"}"
		],
		"description": "solve init"
	}
}